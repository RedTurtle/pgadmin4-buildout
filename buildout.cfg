[buildout]
port = 5050
pgadmin4-version = 3.6

versions = versions
newest = false
allow-picked-versions = false
show-picked-versions = true
parts =
    pgadmin4
    pgadmin4-config
    circus
    circus_config
    crontab
    start-deamon


[pgadmin4]
recipe = zc.recipe.egg
find-links = https://ftp.postgresql.org/pub/pgadmin/pgadmin4/v${buildout:pgadmin4-version}/pip/pgadmin4-${buildout:pgadmin4-version}-py2.py3-none-any.whl
eggs =
    pgadmin4
    gunicorn
dependent-scripts = true
extra-paths =
    ${pgadmin4-config:output}
    ${pgadmin4-wsgi:output}


[pgadmin4-config]
recipe = collective.recipe.template
input = inline:
    import os.path
    DATA_DIR = os.path.realpath(os.path.expanduser(u'~/.pgadmin/'))
    LOG_FILE = os.path.join(DATA_DIR, 'pgadmin4.log')
    SQLITE_PATH = os.path.join(DATA_DIR, 'pgadmin4.db')
    SESSION_DB_PATH = os.path.join(DATA_DIR, 'sessions')
    STORAGE_DIR = os.path.join(DATA_DIR, 'storage')
    SERVER_MODE = False
output = ${buildout:directory}/config_local.py


[pgadmin4-wsgi]
name = pgadmin4_wsgi
recipe = collective.recipe.template
input = inline:
    from pgadmin4.pgAdmin4 import app as application
output = ${buildout:directory}/${:name}.py


[circus]
run_cmd = ${buildout:bin-directory}/gunicorn ${pgadmin4-wsgi:name} --bind 127.0.0.1:${buildout:port}
recipe = zc.recipe.egg
eggs =
    circus


[start-deamon]
recipe = collective.recipe.cmd
on_install = true
cmds = ${crontab:command}


[circus_config]
recipe = collective.recipe.template
base_path = ipc:///${buildout:directory}/
endpoint = ${:base_path}endpoint.sock
numprocesses = 1
input = inline:
    [circus]
    check_delay = 5
    endpoint = ${:endpoint}
    pubsub_endpoint = ${:base_path}pubsub.sock
    stats_endpoint = ${:base_path}stats.sock
    umask = 002

    [watcher:instance]
    working_dir = ${buildout:directory}
    cmd = ${circus:run_cmd}
    shell = True
    copy_env = True
    warmup_delay = 0
    numprocesses = ${:numprocesses}
    # will push in instance.log the stream every 300 ms
    stdout_stream.class = FileStream
    stdout_stream.filename = ${buildout:directory}/instance.log
    stdout_stream.max_bytes = 52428800
    stdout_stream.backup_count = 5
    stderr_stream.class = FileStream
    stderr_stream.filename = ${buildout:directory}/error_instance.log
    stderr_stream.max_bytes = 52428800
    stderr_stream.backup_count = 5
output = ${buildout:directory}/circus.ini


[crontab]
recipe = z3c.recipe.usercrontab
times = @reboot
command = ${buildout:bin-directory}/circusd ${circus_config:output} --daemon


[versions]
Babel = 2.6.0
Click = 7.0
Flask-BabelEx = 0.9.3
Flask-Security = 3.0.0
Jinja2 = 2.10
MarkupSafe = 1.1.0
PyNaCl = 1.3.0
SQLAlchemy = 1.2.14
Werkzeug = 0.14.1
alembic = 1.0.5
asn1crypto = 0.24.0
bcrypt = 3.1.4
cffi = 1.11.5
circus = 0.15.0
collective.recipe.template = 2.1
cryptography = 2.4.2
gunicorn = 19.9.0
idna = 2.7
itsdangerous = 1.1.0
paramiko = 2.4.2
pgadmin4 = ${buildout:pgadmin4-version}
psycopg2 = 2.7.6.1
pyasn1 = 0.4.4
pycrypto = 2.6.1
python-dateutil = 2.7.5
python-editor = 1.0.3
pyzmq = 16.0.4
sshtunnel = 0.1.4
testtools = 2.3.0
tornado = 4.5.3
unittest2 = 1.1.0
zc.recipe.egg = 2.0.7
z3c.recipe.usercrontab = 1.4
collective.recipe.cmd = 0.11

# Required by:
# alembic==1.0.5
Mako = 1.0.7

# Required by:
# unittest2==1.1.0
argparse = 1.4.0

# Required by:
# circus==0.15.0
psutil = 5.4.7

# Required by:
# cffi==1.11.5
pycparser = 2.19

# Required by:
# circus==0.15.0
six = 1.11.0

# Required by:
# testtools==2.3.0
# unittest2==1.1.0
traceback2 = 1.4.0

# Required by:
# html5lib==1.0.1
webencodings = 0.5.1
